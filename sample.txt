


const obj = {
  a: 0,
  b: 1,
  d: 3,
  c: function() {
    return this.d - this.a + this.b;
  }
  
}


Admin                                     SubAdmin                                      Shop/User(current)

Create SubAdmin
Create User                               Create User                                   Daily Report 
Manage Subadmin                           manage User                                   Other Important Screens
                                                                                        Partners
                                                                                        Screen with details  


tasks: 
  1. useRmlAdd 
  2.useCashReciveAdd **
  3.useFristFormAdd ** Done



file -> api
PurchaseOutSideFrom -> purchaseOutSideData 

CommissonFrom -> totalExpensesData
craditDabitState -> borrowedData


CashReciveFrom -> borrowCashReturnData
ShippingForm -> purchaseBorrowData
InflowBorrowingRML -> Bhejan

credit, creditTotal, 

{{url}}/shop/totalExpensesData

{{url}}/shop/borrowedData

{{url}}/shop/


24/1/2023

useRMl --> addBackPageRMLData
usePurchase --> addPurchaseOutsideData
useCashReciveAdd --> borrowCashReturnData
fix sidebar on scroll
set size of input fields according to input given automatically


26/1/2023
useInflow --> addPurchaseBorrowData
useShipping --> addSendData
front daily report --> addFrontPageData

  <td className="tg-0lax" colSpan={10}>
              <span style={{ fontWeight: "bold" }}>
                अंग्रेजी/बीयर/देशी/RML की आमद (खरीद बाहर से)
              </span>
            </td>
            <td className="tg-0lax" colSpan={6}>
              <span style={{ fontWeight: "bold" }}>
                कमीशन/खर्चा/फूट/बेगार/मंथली/पेनल्टी आदि
              </span>
            </td>
            <td className="tg-0lax" colSpan={5}>
              <span style={{ fontWeight: "bold" }}>
                पीछे की उधारी में से, ब्रांचों से व अन्य से नकद प्राप्ति
              </span>
            </td>




             const filteredRegularData =
     FrontPageRegularData &&
     FrontPageRegularData?.filter((item) => {
       let filterPass = true;
       const date = moment(item.date).format("DD/MM/YYYY")
       if (StartDate) {
         filterPass =
           filterPass && moment(StartDate).format("DD/MM/YYYY") <= date;
       }
       if (EndDate) {
         filterPass = filterPass && moment(EndDate).format("DD/MM/YYYY") >= date;
       }
       return filterPass;
     });


  const filteredExceptionalData = selectedDate
    ? BackPageReportExceptionalSize.filter((data) => {
        const date = moment(data.date).format("DD/MM/YYYY");
        return date === moment(selectedDate).format("DD/MM/YYYY");
      })
    : BackPageReportExceptionalSize;

  const filteredRegularData = selectedDate
    ? BackPageReportRegularSize.filter((data) => {
        const date = moment(data.date).format("DD/MM/YYYY");
        return date === moment(selectedDate).format("DD/MM/YYYY");
      })
    : BackPageReportRegularSize;



    const arr1 = [
  { id: 1, name: 'Alice' },
  { id: 2, name: 'Bob' },
  { id: 3, name: 'Charlie' },
];
const arr2 = [
  { id: 1, age: 30 },
  { id: 2, age: 25 },
  { id: 3, age: 35 },
];
const arr3 = [
  { id: 1, color: 'red' },
  { id: 2, color: 'green' },
  { id: 3, color: 'blue' },
];

const mappedArray = arr1.map((item, index) => (
  quan375=arr2.find((item2)=>item.id===item2.id)
  quan180=arr3.find((item3)=>item.id===item2.id)

  return(
  <div key={item.id}>
    <p>ID: {item.id}</p>
    <p>Name: {item.name}</p>
    <p>Age: {arr2[index].age}</p>
    <p>Color: {arr3[index].color}</p>

  </div>)
));


entries[{},{}]

pages[{entries},{entries}]

