


const obj = {
  a: 0,
  b: 1,
  d: 3,
  c: function() {
    return this.d - this.a + this.b;
  }
  
}


Admin                                     SubAdmin                                      Shop/User(current)

Create SubAdmin
Create User                               Create User                                   Daily Report 
Manage Subadmin                           manage User                                   Other Important Screens
                                                                                        Partners
                                                                                        Screen with details  


tasks: 
  1. useRmlAdd 
  2.useCashReciveAdd **
  3.useFristFormAdd ** Done



file -> api
PurchaseOutSideFrom -> purchaseOutSideData 

CommissonFrom -> totalExpensesData
craditDabitState -> borrowedData


CashReciveFrom -> borrowCashReturnData
ShippingForm -> purchaseBorrowData
InflowBorrowingRML -> Bhejan

credit, creditTotal, 

{{url}}/shop/totalExpensesData

{{url}}/shop/borrowedData

{{url}}/shop/


24/1/2023

useRMl --> addBackPageRMLData
usePurchase --> addPurchaseOutsideData
useCashReciveAdd --> borrowCashReturnData
fix sidebar on scroll
set size of input fields according to input given automatically


26/1/2023
useInflow --> addPurchaseBorrowData
useShipping --> addSendData
front daily report --> addFrontPageData

//


        <th>{index + 1}</th>

        <td>
          <div className="form-control">
            <input
              type="text"
              name="partnerName"
              value={transaction.name}
              className="dailyReportInput"
            />
          </div>
        </td>

        <td>
          <div className="form-control">
            <input
              type="number"
              name="debit"
              value={transaction?.debit}
              onChange={(e) => handelOnChangePartner(e, index)}
              className="dailyReportInput"
            />
          </div>
        </td>

        <td>
          <div className="form-control">
            <input
              type="number"
              name="credit"
              value={transaction?.credit}
              onChange={(e) => handelOnChangePartner(e, index)}
              className="dailyReportInput"
            />
            {/* 
            <input
              type="number"
              name="deposit"
              value={partner?.deposit}
              onChange={(e) => handelOnChangePartner(e, index)}
              className="commonSmallForm"
            /> */}
          </div>
        </td>

        <td>
          <div className="flex gap-4">
            <div className="form-control">
              <input
                type="text"
                name="remaining_debit"
                value={transaction}
                className="commonSmallForm"
              />
            </div>
            <div className="form-control">
              <input
                type="number"
                name="remaining"
                value={transaction}
                className="commonSmallForm"
              />
            </div>
          </div>
        </td>